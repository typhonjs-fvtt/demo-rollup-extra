{"version":3,"file":"server-esm.js","sources":["./src/common/const/basic.js","./src/common/const/active.js","./src/common/const/index.js","./src/common/functions/math.js","./src/server/functions/serverFunctions.js","./src/server/functions/otherFunctions.js","./src/server/components/ServerThing.js","./src/server/components/ServerThing2.js"],"sourcesContent":["/* ----------------------------------------- */\r\n/*  Reusable Type Definitions                */\r\n/* ----------------------------------------- */\r\n\r\n/**\r\n * A single point, expressed as an object {x, y}\r\n * @typedef {PIXI.Point|{x: number, y: number}} Point\r\n */\r\n\r\n/**\r\n * A single point, expressed as an array [x,y]\r\n * @typedef {number[]} PointArray\r\n */\r\n\r\n/**\r\n * A Ray intersection point\r\n * @typedef {{x: number, y: number, t0: number, t1: number}|null} RayIntersection\r\n * @property [wall] Wall\r\n */\r\n\r\n/**\r\n * A standard rectangle interface.\r\n * @typedef {PIXI.Rectangle|{x: number, y: number, width: number, height: number}} Rectangle\r\n */\r\n\r\n\r\n/* ----------------------------------------- */\r\n/*  Database Workflows                       */\r\n/* ----------------------------------------- */\r\n\r\n/**\r\n * The expected structure for a Data record\r\n * @typedef {{string, any}} Data\r\n * @property [_id] string\r\n */\r\n\r\n/**\r\n * An object of optional keys and values which configure the behavior of a function\r\n * @typedef {{string, any}} Options\r\n */\r\n\r\nexport const vtt = \"Foundry VTT\";\r\nexport const VTT = \"Foundry Virtual Tabletop\";\r\nexport const WEBSITE_URL = \"https://foundryvtt.com\";\r\nexport const ASCII = `_______________________________________________________________\r\n _____ ___  _   _ _   _ ____  ______   __ __     _______ _____ \r\n|  ___/ _ \\\\| | | | \\\\ | |  _ \\\\|  _ \\\\ \\\\ / / \\\\ \\\\   / |_   _|_   _|\r\n| |_ | | | | | | |  \\\\| | | | | |_) \\\\ V /   \\\\ \\\\ / /  | |   | |  \r\n|  _|| |_| | |_| | |\\\\  | |_| |  _ < | |     \\\\ V /   | |   | |  \r\n|_|   \\\\___/ \\\\___/|_| \\\\_|____/|_| \\\\_\\\\|_|      \\\\_/    |_|   |_|  \r\n===============================================================`;","/**\r\n * Define the allowed ActiveEffect application modes\r\n * @type {{string, number}}\r\n */\r\nexport const ACTIVE_EFFECT_MODES = {\r\n   CUSTOM: 0,\r\n   MULTIPLY: 1,\r\n   ADD: 2,\r\n   DOWNGRADE: 3,\r\n   UPGRADE: 4,\r\n   OVERRIDE: 5\r\n};\r\n","import * as basic from './basic';\r\nimport * as active from './active';\r\n\r\nexport const CONST = { ...basic, ...active };","/* -------------------------------------------- */\r\n/*  Math Functions                              */\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Bound a number between some minimum and maximum value, inclusively\r\n * @param {number} num    The current value\r\n * @param {number} min    The minimum allowed value\r\n * @param {number} max    The maximum allowed value\r\n * @return {number}       The clamped number\r\n */\r\nexport function clampNumber(num, min, max) {\r\n   return Math.min(max, Math.max(num, min));\r\n}\r\n\r\n/**\r\n * Round a floating point number to a certain number of decimal places\r\n * @param {number} number  A floating point number\r\n * @param {number} places  An integer number of decimal places\r\n */\r\nexport function roundDecimals(number, places) {\r\n   places = Math.min(Math.trunc(places), 0);\r\n   let scl = Math.pow(10, places);\r\n   return Math.round(number * scl) / scl;\r\n}\r\n\r\n/**\r\n * Transform an angle in radians to a number in degrees\r\n * @param {number} angle    An angle in radians\r\n * @return {number}         An angle in degrees\r\n */\r\nexport function toDegrees(angle) {\r\n   return angle * (180 / Math.PI);\r\n}\r\n\r\n/**\r\n * Transform an angle in degrees to be bounded within the domain [0, 360]\r\n * @param {number} degrees  An angle in degrees\r\n * @return {number}         The same angle on the range [0, 360]\r\n */\r\nexport function normalizeDegrees(degrees) {\r\n   let nd = (degrees + 360) % 360;\r\n   return (nd > 180) ? nd - 360 : nd;\r\n}\r\n\r\n/**\r\n * Transform an angle in degrees to an angle in radians\r\n * @param {number} angle    An angle in degrees\r\n * @return {number}         An angle in radians\r\n */\r\nexport function toRadians(angle) {\r\n   return (angle % 360) * (Math.PI / 180);\r\n}\r\n\r\n/**\r\n * Transform an angle in radians to be bounded within the domain [-PI, PI]\r\n * @param {number} radians  An angle in degrees\r\n * @return {number}         The same angle on the range [-PI, PI]\r\n */\r\nexport function normalizeRadians(radians) {\r\n   let pi2 = 2 * Math.PI;\r\n   let nr = (radians + pi2) % pi2;\r\n   return (nr > Math.PI) ? nr - pi2 : nr;\r\n}\r\n","/**\r\n * Some server function\r\n */\r\nexport function aServerFunc() {}\r\n\r\n/**\r\n * Some other server function\r\n */\r\nexport function aServerFunc2() {}","/**\r\n * Some other function\r\n */\r\nexport function otherFunction() {}","/**\r\n * Some server thing\r\n */\r\nexport class ServerThing {\r\n   static doThing() {}\r\n}","/**\r\n * Some other server thing\r\n */\r\nexport class ServerThing2 {\r\n   static doThing() {}\r\n}"],"names":[],"mappings":"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"}