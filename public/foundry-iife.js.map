{"version":3,"file":"foundry-iife.js","sources":["./src/common/const/basic.js","./src/common/const/active.js","./src/common/const/index.js","./src/common/functions/math.js","./src/client/functions/templates.js","./src/client/components/Application.js","./src/client/components/Dialog.js"],"sourcesContent":["/* ----------------------------------------- */\r\n/*  Reusable Type Definitions                */\r\n/* ----------------------------------------- */\r\n\r\n/**\r\n * A single point, expressed as an object {x, y}\r\n * @typedef {PIXI.Point|{x: number, y: number}} Point\r\n */\r\n\r\n/**\r\n * A single point, expressed as an array [x,y]\r\n * @typedef {number[]} PointArray\r\n */\r\n\r\n/**\r\n * A Ray intersection point\r\n * @typedef {{x: number, y: number, t0: number, t1: number}|null} RayIntersection\r\n * @property [wall] Wall\r\n */\r\n\r\n/**\r\n * A standard rectangle interface.\r\n * @typedef {PIXI.Rectangle|{x: number, y: number, width: number, height: number}} Rectangle\r\n */\r\n\r\n\r\n/* ----------------------------------------- */\r\n/*  Database Workflows                       */\r\n/* ----------------------------------------- */\r\n\r\n/**\r\n * The expected structure for a Data record\r\n * @typedef {{string, any}} Data\r\n * @property [_id] string\r\n */\r\n\r\n/**\r\n * An object of optional keys and values which configure the behavior of a function\r\n * @typedef {{string, any}} Options\r\n */\r\n\r\nexport const vtt = \"Foundry VTT\";\r\nexport const VTT = \"Foundry Virtual Tabletop\";\r\nexport const WEBSITE_URL = \"https://foundryvtt.com\";\r\nexport const ASCII = `_______________________________________________________________\r\n _____ ___  _   _ _   _ ____  ______   __ __     _______ _____ \r\n|  ___/ _ \\\\| | | | \\\\ | |  _ \\\\|  _ \\\\ \\\\ / / \\\\ \\\\   / |_   _|_   _|\r\n| |_ | | | | | | |  \\\\| | | | | |_) \\\\ V /   \\\\ \\\\ / /  | |   | |  \r\n|  _|| |_| | |_| | |\\\\  | |_| |  _ < | |     \\\\ V /   | |   | |  \r\n|_|   \\\\___/ \\\\___/|_| \\\\_|____/|_| \\\\_\\\\|_|      \\\\_/    |_|   |_|  \r\n===============================================================`;","/**\r\n * Define the allowed ActiveEffect application modes\r\n * @type {{string, number}}\r\n */\r\nexport const ACTIVE_EFFECT_MODES = {\r\n   CUSTOM: 0,\r\n   MULTIPLY: 1,\r\n   ADD: 2,\r\n   DOWNGRADE: 3,\r\n   UPGRADE: 4,\r\n   OVERRIDE: 5\r\n};\r\n","import * as basic from './basic';\r\nimport * as active from './active';\r\n\r\nexport const CONST = { ...basic, ...active };","/* -------------------------------------------- */\r\n/*  Math Functions                              */\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Bound a number between some minimum and maximum value, inclusively\r\n * @param {number} num    The current value\r\n * @param {number} min    The minimum allowed value\r\n * @param {number} max    The maximum allowed value\r\n * @return {number}       The clamped number\r\n */\r\nexport function clampNumber(num, min, max) {\r\n   return Math.min(max, Math.max(num, min));\r\n}\r\n\r\n/**\r\n * Round a floating point number to a certain number of decimal places\r\n * @param {number} number  A floating point number\r\n * @param {number} places  An integer number of decimal places\r\n */\r\nexport function roundDecimals(number, places) {\r\n   places = Math.min(Math.trunc(places), 0);\r\n   let scl = Math.pow(10, places);\r\n   return Math.round(number * scl) / scl;\r\n}\r\n\r\n/**\r\n * Transform an angle in radians to a number in degrees\r\n * @param {number} angle    An angle in radians\r\n * @return {number}         An angle in degrees\r\n */\r\nexport function toDegrees(angle) {\r\n   return angle * (180 / Math.PI);\r\n}\r\n\r\n/**\r\n * Transform an angle in degrees to be bounded within the domain [0, 360]\r\n * @param {number} degrees  An angle in degrees\r\n * @return {number}         The same angle on the range [0, 360]\r\n */\r\nexport function normalizeDegrees(degrees) {\r\n   let nd = (degrees + 360) % 360;\r\n   return (nd > 180) ? nd - 360 : nd;\r\n}\r\n\r\n/**\r\n * Transform an angle in degrees to an angle in radians\r\n * @param {number} angle    An angle in degrees\r\n * @return {number}         An angle in radians\r\n */\r\nexport function toRadians(angle) {\r\n   return (angle % 360) * (Math.PI / 180);\r\n}\r\n\r\n/**\r\n * Transform an angle in radians to be bounded within the domain [-PI, PI]\r\n * @param {number} radians  An angle in degrees\r\n * @return {number}         The same angle on the range [-PI, PI]\r\n */\r\nexport function normalizeRadians(radians) {\r\n   let pi2 = 2 * Math.PI;\r\n   let nr = (radians + pi2) % pi2;\r\n   return (nr > Math.PI) ? nr - pi2 : nr;\r\n}\r\n","/* -------------------------------------------- */\r\n/*  HTML Template Loading                       */\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Get a template from the server by fetch request and caching the retrieved result\r\n * @param {string} path           The web-accessible HTML template URL\r\n * @returns {Promise<Function>}\t  A Promise which resolves to the compiled Handlebars template\r\n */\r\nexport async function getTemplate(path) {}\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Load and cache a set of templates by providing an Array of paths\r\n * @param {string[]} paths    An array of template file paths to load\r\n * @return {Promise<string[]>}\r\n */\r\nexport async function loadTemplates(paths) {}\r\n\r\n/* -------------------------------------------- */\r\n\r\n/**\r\n * Get and render a template using provided data and handle the returned HTML\r\n * Support asynchronous file template file loading with a client-side caching layer\r\n *\r\n * Allow resolution of prototype methods and properties since this all occurs within the safety of the client.\r\n * @see {@link https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access}\r\n *\r\n * @param {string} path             The file path to the target HTML template\r\n * @param {Object} data             A data object against which to compile the template\r\n *\r\n * @return {Promise.<HTMLElement>}  Returns the rendered HTML\r\n */\r\nexport function renderTemplate(path, data) {}\r\n","import { renderTemplate } from '../functions/index';\r\n\r\nimport '../less/application.less';\r\n\r\nlet _appId = 0;\r\nlet _maxZ = 100;\r\n\r\nconst MIN_WINDOW_WIDTH = 200;\r\nconst MIN_WINDOW_HEIGHT = 50;\r\n\r\n/**\r\n * The standard application window that is rendered for a large variety of UI elements in Foundry VTT.\r\n * @interface\r\n *\r\n * @param {Object} options                      Configuration options which control how the application is rendered.\r\n *                                              Application subclasses may add additional supported options, but the\r\n *                                              following configurations are supported for all Applications. The values\r\n *                                              passed to the constructor are combined with the defaultOptions defined\r\n *                                              at the class level.\r\n * @param {string} options.baseApplication      A named \"base application\" which generates an additional hook\r\n * @param {number} options.width                The default pixel width for the rendered HTML\r\n * @param {number} options.height               The default pixel height for the rendered HTML\r\n * @param {number} options.top                  The default offset-top position for the rendered HTML\r\n * @param {number} options.left                 The default offset-left position for the rendered HTML\r\n * @param {boolean} options.popOut              Whether to display the application as a pop-out container\r\n * @param {boolean} options.minimizable         Whether the rendered application can be minimized (popOut only)\r\n * @param {boolean} options.resizable           Whether the rendered application can be drag-resized (popOut only)\r\n * @param {string} options.id                   The default CSS id to assign to the rendered HTML\r\n * @param {Array.<string>} options.classes      An array of CSS string classes to apply to the rendered HTML\r\n * @param {string} options.title                A default window title string (popOut only)\r\n * @param {string} options.template             The default HTML template path to render for this Application\r\n * @param {Array.<string>} options.scrollY      A list of unique CSS selectors which target containers that should\r\n *                                              have their vertical scroll positions preserved during a re-render.\r\n *\r\n * Hooks:\r\n *   renderApplication\r\n *   closeApplication\r\n *   getApplicationHeaderButtons\r\n */\r\nexport class Application\r\n{\r\n   constructor(options = {})\r\n   {\r\n      /**\r\n       * The application ID is a unique incrementing integer which is used to identify every application window\r\n       * drawn by the VTT\r\n       * @type {number}\r\n       */\r\n      this.appId = _appId += 1;\r\n\r\n      this._dummyHeight = MIN_WINDOW_HEIGHT;\r\n      this._dummyWidth = MIN_WINDOW_WIDTH;\r\n   }\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * Create drag-and-drop workflow handlers for this Application\r\n    * @return {DragDrop[]}     An array of DragDrop handlers\r\n    * @private\r\n    */\r\n   _createDragDropHandlers() {}\r\n\r\n   /**\r\n    * Render the outer application wrapper\r\n    * @return {Promise.<HTMLElement>}   A promise resolving to the constructed jQuery object\r\n    * @private\r\n    */\r\n   async _renderOuter(options) {\r\n      // Render the template and return the promise\r\n      let html = await renderTemplate(\"templates/app-window.html\", windowData);\r\n      html = $(html);\r\n\r\n      // Set the outer frame z-index\r\n      if ( Object.keys(ui.windows).length === 0 ) _maxZ = 100 - 1;\r\n      html.css({zIndex: Math.min(++_maxZ, 9999)});\r\n\r\n      // Return the outer frame\r\n      return html;\r\n   }\r\n}","import { Application } from './Application';\r\n\r\nimport '../less/dialog.less';\r\n\r\n/**\r\n * @typedef {Object} DialogButton\r\n * @property {string} icon            A Font Awesome icon for the button\r\n * @property {string} label           The label for the button\r\n * @property {Function} [callback]    A callback function that fires when the button is clicked\r\n */\r\n\r\n/**\r\n * Create a dialog window displaying a title, a message, and a set of buttons which trigger callback functions.\r\n * @implements {Application}\r\n *\r\n * @param {Object} data               An object of dialog data which configures how the modal window is rendered\r\n * @param {string} data.title         The window title\r\n * @param {string} data.content       HTML content\r\n * @param {Function} [data.render]    A callback function invoked when the dialog is rendered\r\n * @param {Function} [data.close]     Common callback operations to perform when the dialog is closed\r\n * @param {Object<string, DialogButton>} data.buttons The buttons which are displayed as action choices for the dialog\r\n *\r\n * @param {Object} options            Dialog rendering options, see :class:`Application`\r\n * @param {string} options.default    The name of the default button which should be triggered on Enter\r\n * @param {boolean} options.jQuery    Whether to provide jQuery objects to callback functions (if true) or plain\r\n *                                    HTMLElement instances (if false). This is currently true by default but in the\r\n *                                    future will become false by default.\r\n *\r\n * @example <caption>Constructing a custom dialog instance</caption>\r\n * let d = new Dialog({\r\n *  title: \"Test Dialog\",\r\n *  content: \"<p>You must choose either Option 1, or Option 2</p>\",\r\n *  buttons: {\r\n *   one: {\r\n *    icon: '<i class=\"fas fa-check\"></i>',\r\n *    label: \"Option One\",\r\n *    callback: () => console.log(\"Chose One\")\r\n *   },\r\n *   two: {\r\n *    icon: '<i class=\"fas fa-times\"></i>',\r\n *    label: \"Option Two\",\r\n *    callback: () => console.log(\"Chose Two\")\r\n *   }\r\n *  },\r\n *  default: \"two\",\r\n *  render: html => console.log(\"Register interactivity in the rendered dialog\"),\r\n *  close: html => console.log(\"This always is logged no matter which option is chosen\")\r\n * });\r\n * d.render(true);\r\n */\r\nexport class Dialog extends Application {\r\n   constructor(data, options)\r\n   {\r\n      super(data, options);\r\n   }\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /** @override */\r\n   static get defaultOptions() {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /** @override */\r\n   get title() {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /** @override */\r\n   getData(options) {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /** @override */\r\n   activateListeners(html) {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * Handle a left-mouse click on one of the dialog choice buttons\r\n    * @param {MouseEvent} event    The left-mouse click event\r\n    * @private\r\n    */\r\n   _onClickButton(event) {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * Handle a keydown event while the dialog is active\r\n    * @param {KeyboardEvent} event   The keydown event\r\n    * @private\r\n    */\r\n   _onKeyDown(event) {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * Submit the Dialog by selecting one of its buttons\r\n    * @param {Object} button     The configuration of the chosen button\r\n    * @private\r\n    */\r\n   submit(button) {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /** @override */\r\n   async close(options) {}\r\n\r\n   /* -------------------------------------------- */\r\n   /*  Factory Methods                             */\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * A helper factory method to create simple confirmation dialog windows which consist of simple yes/no prompts.\r\n    * If you require more flexibility, a custom Dialog instance is preferred.\r\n    *\r\n    * @param {string} title          The confirmation window title\r\n    * @param {string} content        The confirmation message\r\n    * @param {Function} yes          Callback function upon yes\r\n    * @param {Function} no           Callback function upon no\r\n    * @param {Function} render       A function to call when the dialog is rendered\r\n    * @param {boolean} defaultYes    Make \"yes\" the default choice?\r\n    * @param {boolean} rejectClose   Reject the Promise if the Dialog is closed without making a choice.\r\n    * @param {Object} options        Additional rendering options passed to the Dialog\r\n    *\r\n    * @return {Promise<*>}           A promise which resolves once the user makes a choice or closes the window\r\n    *\r\n    * @example\r\n    * let d = Dialog.confirm({\r\n    *  title: \"A Yes or No Question\",\r\n    *  content: \"<p>Choose wisely.</p>\",\r\n    *  yes: () => console.log(\"You chose ... wisely\"),\r\n    *  no: () => console.log(\"You chose ... poorly\"),\r\n    *  defaultYes: false\r\n    * });\r\n    */\r\n   static async confirm({title, content, yes, no, render, defaultYes=true, rejectClose=false, options={}}={}, old) {}\r\n\r\n   /* -------------------------------------------- */\r\n\r\n   /**\r\n    * A helper factory method to display a basic \"prompt\" style Dialog with a single button\r\n    * @param {string} title          The confirmation window title\r\n    * @param {string} content        The confirmation message\r\n    * @param {string} label          The confirmation button text\r\n    * @param {Function} callback     A callback function to fire when the button is clicked\r\n    * @param {Function} render       A function that fires after the dialog is rendered\r\n    * @param {object} options        Additional rendering options\r\n    * @return {Promise<*>}           A promise which resolves when clicked, or rejects if closed\r\n    */\r\n   static async prompt({title, content, label, callback, render, options={}}={}) {}\r\n}"],"names":[],"mappings":"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"}